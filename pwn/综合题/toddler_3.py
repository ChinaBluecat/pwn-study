# 这题是yan85模拟内核
# 定义了一堆奇怪的寄存器和指令集啥的
# 通过读取用户输入到一段空间中, 每3个字节作为一个操作
# 为 arg2 op arg1的顺序
# 可用操作有:
# imm   0x02        寄存器写入数据
# add   0x10        寄存器求和写入第一个寄存器
# stk   <0/0xff     寄存器2的值放入寄存器1中 mov a, b
# stm   0x08        寄存器2的指向区的值写入寄存器1指向区中 mov [a], [b]
# ldm   0x20        寄存器2的指向区内容写入寄存器1 mov a, [b]
# cmp   0x04        比较两个寄存器的值, 并影响标志位
# jmp   0x40        根据选定的标志位来进行跳转判断(好难看懂=。=)
# sys   0x01        设计了几种系统调用, 似乎可以通过控制寄存器的值用write越界
# 寄存器:
# a 0x3fc   0x10
# b 0x3fd   0x40
# c 0x3fe   0x02
# d 0x3ff   0x01
# s 0x400   0x20    用作栈, 内容指向栈顶
# i 0x401   0x08    # 这个东西是外面循环的寄存器, 可以被修改
# f 0x402   0x04    标志位寄存器


# 可能的思路是在sys里面, 那几个write有些问题, 但是要咋利用啊=。=
# 大概是造成一个超长输入写的情况把=。=, 覆盖到ret, 跳到布置好的栈上
